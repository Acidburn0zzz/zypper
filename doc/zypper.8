.TH "zypper" "8" "0.7.0" "zypper" "System Tools"
.SH "SYNTAX"
.LP
zypper [\fI\-\-global\-options\fR] <\fBcommand\fR> [\fI\-\-command\-options\fR] [\fBcommand-arguments\fR]

zypper \fI\-\-help\fR [\fBcommand\fR]
.SH "DESCRIPTION"
.LP
zypper is a command\-line interface to ZYpp system management library. It can be used to install, update, remove software, manage repositories, perform various searches, and more.

.SH "COMMANDS"
.LP
zypper provides a number of \fBcommands\fR. Each command accepts the options listed in the GLOBAL OPTIONS section. In addition, many commands have specific options, which are listed in this section.

.SS General Commands

.TP
.B shell (sh)
Starts a shell for entering multiple commands in one session.
End it by "exit", "quit", or Ctrl-D.

.SS Package Management Commands

.LP
zypper works with several types of resource objects, called
.BR resolvables .
A resolvable is a package, patch, pattern, language, or a product.
.LP
.B package
\- all RPM packages including patch and delta packages
.br
.B patch
\- update of the packages, it can include special scripts and messages
.br
.B pattern
\- group of packages 
.br
.B language
\- group of packages with language support
.br
.B product
\- group of packages, which are necessary to install a product


.TP
.B info (if) <name> ...
Displays full info for the specified packages.

.TP
.B install (in) <capability> ...
Install resolvables.

Capability is: NAME, or "NAME OP EDITION", where OP is < <= = >= > and
EDITION is VERSION[-RELEASE].

Names are not only package names but any symbols provided by packages:
/bin/vi, libcurl.so.3, perl(Time::ParseDate). Just remember to quote to protect the
special characters from the shell.

.TP
\fI\-c, \-\-catalog\fR <catalog>
Only from this catalog (FIXME not implemented yet)
.TP
\fI\-t, \-\-type\fR <resolvable_type>
Type of resolvable (default: package)
.TP
.I \-n, \-\-name
Select resolvables by older method, considering just names, not capabilities.
.TP
.I \-l, \-\-auto\-agree\-with\-licenses
Automatically say 'yes' to third party license confirmation prompt. By using this option, you choose to agree with licenses of all third-party software this command will install. This option is particularly useful for administators installing the same set of packages on multiple machines (by an automated process) and have the licenses confirmed before.
.TP
.I      \-\-debug\-solver
Create solver test case for debugging. Use this option, if you think the
dependencies were not solved all right and attach the resulting /var/log/zypper.solverTestCase
directory to your bug report. To use this option, simply add it to the problematic
install or remove command. 

.TP
.B list-updates (lu) [options]
List available updates.
.TP
\fI\-t, --type\fR <resolvable_type>
Type of resolvable (default: patch)
.TP
\fI\--from-repo\fR <repository_alias>
Limit view to updates available from named repository

See also the NOTE at
.BR update .

.TP
.B remove (rm) <capability> ...
Remove resolvables.
.PP
Capability is usually a plain name, for details see the install command.
.TP
\fI\-t, -\-type\fR <resolvable_type>
Type of resolvable (default: package)
.TP
.I \-n, \-\-name
Select resolvables by older method, considering just names, not capabilities.
.TP
.I      \-\-debug\-solver
Create solver test case for debugging. See the install command for details.

.TP
.B update (up) [options]
Update all installed resolvables with newer versions, where applicable.
.TP
\fI\-t, -\-type\fR <resolvable_type>
Type of resolvable (default: patch)
.TP
\fI\--from-repo\fR <repository_alias>
Limit to updates available from named repository
.TP
.I     \-\-skip\-interactive
This will skip interactive patches, that is, those that need reboot,
contain a message, or update a package whose license needs to be
confirmed.
.TP
.I \-l, \-\-auto\-agree\-with\-licenses
Automatically say 'yes' to third party license confirmation prompt. By using this option, you choose to agree with licenses of all third-party software this command will install. This option is particularly useful for administators installing the same set of packages on multiple machines (by an automated process) and have the licenses confirmed before.

.B NOTE:
Zypper prefers to update only those packages for which a patch
description exists, like on the SUSE update servers. To operate on all
packages for which there is a better version instead, select \fI--type
package\fR which is also the default in rug compatibility mode.

By using \fI--from-repo\fR one can follow a specific repository only
with updates.

.TP
\fBsearch\fR (\fBse\fR) [\fIoptions\fR] [\fBquerystring\fR] ...
Search for resolvables matching given strings. * (any substring) and ? (any character) wildcards can also be used within search strings.
.IP
Results of search are printed in a table with following columns: S (status), Catalog, Type (type of resolvable), Name, Version, Arch (architecture). Status column can contain following values: i - installed, v - another version installed, or an empty space for neither of the former cases.
.IP
In \fBrug compatibility mode\fR the --type option defaults to \fBpackage\fR. Furthermore, Instead of the Type column, rug's Bundle column is printed, however, with no contents.
.IP
This command accepts the following options:

.TP
\fI    \-\-match\-all\fR
Search for a match to all search strings (default).
.TP
\fI    \-\-match\-any\fR
Search for a match to any of the search strings.
.TP
\fI    \-\-match\-substrings\fR
Matches for search strings may be partial words (default).
.TP
\fI    \-\-match\-words\fR
Matches for search strings may only be whole words.
.TP
\fI    \-\-match-exact\fR
Searches for an exact name of the resolvable.
.TP
.I \-d, \-\-search\-descriptions
Search also in summaries and descriptions.
.TP
.I \-i, \-\-installed\-only
Show only resolvables that are already installed.
.TP
.I \-u, \-\-uninstalled\-only
Show only resolvables that are not currently installed.
.TP
\fI\-t, -\-type\fR [resolvable]
Search only for resolvables of specified type.
.TP
.I \-c, \-\-catalog
Show only the resolvables from the catalog you specify. (not implemented yet)
.TP
\fI    \-\-sort\-by\-name\fR
Sort resolvables by name (default).
.TP
\fI    \-\-sort\-by\-catalog\fR
Sort resolvables by catalog, not by name.

.SS Patch Management

.TP
.B patch-check (pchk)
Check for patches. Displays a count of applicable patches and how many
of them have the security category.

Exit status: 0 - no patches, 1 - non-security patches, 2 - security patches.

.TP
.B patches (pch)
List patches. Lists all patches that are available, including
installed and not applicable ones.

.TP
.B patch-info <name> ...
Displays full info for the specified patches.
 
.SS Repository Management

.LP
zypper is able to work with YaST, YUM, and aptrpm
repositories, ZENworks 7 Linux Management, ZENworks 6.6.x Linux
Management servers, as well as local files.

.TP
.B addrepo (ar) [options] <URI> <alias>
Add a new repository specified by URI and assign specified alias to it.
.TP
\fI\-r, \-\-repo\fR <FILE.repo>
Read URI and alias from specified .repo file
.TP
\fI\-t, \-\-type\fR <TYPE>
Type of repository (YaST, YUM, or Plaindir).
.TP
\fI\-d, \-\-disabled\fR
Add the repository as disabled.
.TP
\fI\-n, \-\-no\-refresh\fR 
Add the repository with auto-refresh disabled.
.TP
NOTE: This command does not automatically refresh the newly added repositories. You have to use the \fBrefresh\fR command after finishing your modifications to repositories with \fB*repo\fR commands.

.TP
.B removerepo (rr) [options] <alias|URI>
Delete repository specified by alias or URI.
.TP
\fI    --loose-auth\fR
Ignore user authentication data in the URI
.TP
\fI    --loose-query\fR
Ignore query string in the URI

.TP
.B repos (lr)
List all defined repositories.
.IP
Following data are printed for each source found: Enabled (whether the source is enabled), Refresh (whether autorefresh is enabled for the source), Type (YaST, YUM, ...), Name, and URI.
.IP
rug compatibility mode: if \fI-r\fR global option is set, zypper doesn't include 'Enabled' and 'Refresh' columns and prints rug's 'Status' column with values "Active" or "Disabled" instead.

.TP
.B renamerepo (nr) <alias> <new-alias>
Assign new alias to the repository specified by alias.

.TP
.B modifyrepo (mr) <options> <alias>
Modify properties of the repository specified by alias.
.TP
\fI\-e, \-\-enable\fR
Enable the repository.
.TP
\fI\-d, \-\-disable\fR
Disable the repository.
.TP
\fI\-a, \-\-enable-autorefresh\fR
Enable auto-refresh for the repository.
.TP
\fI    \-\-disable\-autorefresh\fR
Disable auto-refresh for the repository.

.TP
.B refresh (ref)
Refresh all installation sources found in system.
.IP
This means downloading resolvables' metadata from source media (if needed), storing it in local cache (typically under /var/lib/zypp/cache/raw directory) and preparsing the metadata into an sqlite database (/var/lib/zypp/cache/zypp.db).

.SH "GLOBAL OPTIONS"
.TP 
.I \-h, \-\-help
Help. If a \fBcommand\fR is specified together with --help option, command specific help is displayed.
.TP
.I \-V, \-\-version
Print zypper version number and exit.
.TP
.I \-v, \-\-verbose
Increase verbosity. For debugging output specify this option twice.
.TP
.I \-q, \-\-quiet
Suppress normal output. Brief messages will still be printed though. If used together with conflicting --verbose option, the --verbose option takes preference.
.TP
.I \-t, \-\-terse
Terse output for machine consumption.
.TP
.I \-s, \-\-table\-style
Specifies table style to use. Table style is identified by an integer number. TODO
.TP
.I \-r, \-\-rug\-compatible
Turns on rug compatibility. See compatibility notes next to affected commands.
.TP
.I      \-\-non\-interactive
Switches to non-interactive mode. In this mode zypper doesn't ask user to type answers to various prompts, but uses default answers automatically.
.TP
.I      \-\-no\-gpg\-checks
Ignore GPG check failures and continue. If a GPG issue occurs when using this option zypper prints and logs a warning and automatically continues without interrupting the operation. Use this option with causion, as you can easily overlook security problems by using it.
.TP
.I \-R, \-\-root <dir>
Operates on a different root directory.

.SH "FILES"
.TP
.B /etc/zypp/repos.d
Directory containing repository configuration (*.repo) files. You can use the \fBrepo\fR commands to manipulate these files, or you can edit them yourself. In either case, after doing the modifications, executing \fBzypper refresh\fR is strongly recommended.
.TP
.B /var/lib/zypp/cache/raw
Directory for storing raw metadata contained in repositories.
.TP
.B /var/lib/zypp/cache/zypp.db
Sqlite database file containing pre-parsed metadata of all repositories.
.TP
.B ~/.zypper_history
Command history for the shell.

.SH "EXIT CODES"
.LP
There are several exit codes defined for zypper for use e.g. within scripts. These codes are defined in header file src/zmart.h found in zypper source package. Codes from interval (1-5) denote an error, numbers (100-103) provide a specific information, 0 represents a normal successfull run. Following is a list of these codes with descriptions.
.TP
0 - ZYPPER_EXIT_OK
Successfull run of zypper with no special info.
.TP
1 - ZYPPER_EXIT_ERR_BUG
Unexpected situation occured, probably caused by a bug.
.TP
2 - ZYPPER_EXIT_ERR_SYNTAX
zypper was invoked with an invalid command or option, or a bad syntax.
.TP
3 - ZYPPER_EXIT_ERR_INVALID_ARGS
Some of provided arguments were invalid. E.g. an invalid URI was provided to the addrepo command.
.TP
4 - ZYPPER_EXIT_ERR_ZYPP
A problem reported by ZYPP library. E.g. another instance of ZYPP is running.
.TP
5 - ZYPPER_EXIT_ERR_PRIVILEGES
User invoking zypper has insufficient privileges for specified operation.
.TP
100 - ZYPPER_EXIT_INF_UPDATE_NEEDED
Returned by the patch-check command if there are patches available for installation.
.TP
101 - ZYPPER_EXIT_INF_SEC_UPDATE_NEEDED
Returned by the patch-check command if there are security patches available for installation.
.TP
102 - ZYPPER_EXIT_INF_REBOOT_NEEDED
Returned after a successfull installation of a patch which requires reboot of computer.
.TP
103 - ZYPPER_EXIT_INF_RESTART_NEEDED
Returned after a successfull installation of a patch which requires restart of the package manager itself. This means that one of patches to be installed affects the package manager itself and the command used (e.g. zypper update) needs to be executed once again to install any remaining patches.


.SH "COMPATIBILITY WITH RUG"
.LP
zypper is designed to be compatible with rug, which is a command\-line interface to the ZENworks Linux Management (ZLM) agent. Compared to rug, zypper does not need the ZLM daemon to run, and is intented to provide more and improved functionality. Following is a list of zypper-rug command aliases, supported rug command line options, and compatibility notes. See also compatibility notes in descriptions of zypper commands. 

.LP 
.SS Service Management Commands
.LP
ZENworks distinguishes services and catalogs. A service is
added by URI and contains one or more catalogs. Libzypp does not have
this distinction (yet) but for compatibility it is able to use the same command
and option names (service-add, --catalog) as rug.
.LP
Currently, a Repository in zypper is a synonym for both Service and Catalog in ZLM.
.TP
.I rug service-add (sa)
zypper addrepo (ar)

.TP
.I rug service-delte (sd)
zypper removerepo (rr)

.TP
.I rug service-list (sl)
zypper repos (lr)

.LP 
.SS Package Management Commands

.TP
.I rug install (in)
zypper install (in)
.RS
.TP
.I \-y, \-\-no\-confirm
Don't require user interaction. This option is implemented using zypper's non-interactive mode.
.TP
.I      \-\-agree\-to\-third\-party\-licenses
This option is an alias to zypper's --auto-agree-with-licenses option.
.RE

.TP
.I rug remove (rm)
zypper remove (rm)
.RS
.TP
.I \-y, \-\-no\-confirm
Don't require user interaction. This option is implemented using zypper's non-interactive mode.
.RE

.TP
.I rug update (up)
zypper update (up)
.RS
.TP
.I \-y, \-\-no\-confirm
Don't require user interaction. This option is implemented using zypper's non-interactive mode.
.I    , \-\-agree\-to\-third\-party\-licenses
This option is an alias to zypper's --auto-agree-with-licenses option.
.RE

.SH "NOTE"
.LP
Currently, zypper can be run only by user with root privileges.

.SH "AUTHORS"
.LP
Martin Vidner <mvidner@suse.cz>
.br
Duncan Mac-Vicar <dmacvicar@suse.de>
.br
Jan Kupec <jkupec@suse.cz>

.SH "SEE ALSO"
.LP
rug(1), YaST2(8)

