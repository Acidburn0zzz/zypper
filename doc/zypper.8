.TH "zypper" "8" "0.10.0" "zypper" "System Tools"
.SH "SYNTAX"
.LP
zypper [\fI\-\-global\-options\fR] <\fBcommand\fR> [\fI\-\-command\-options\fR] [\fBcommand-arguments\fR]

zypper \fI\-\-help\fR [\fBcommand\fR]
.SH "DESCRIPTION"
.LP
zypper is a command\-line interface to ZYpp system management library.
It can be used to install, update, remove software, manage repositories, perform
various searches, and more.

.SH "COMMANDS"
.LP
zypper provides a number of \fBcommands\fR. Each command accepts the options listed in the GLOBAL OPTIONS section. In addition, many commands have specific options, which are listed in this section.

.SS General Commands

.TP
.B shell (sh)
Starts a shell for entering multiple commands in one session.
End it by "exit", "quit", or Ctrl-D.

.SS Package Management Commands

.LP
zypper works with several types of resource objects, called
.BR resolvables .
A resolvable is a package, patch, pattern, language, or a product.
.LP
.B package
\- all RPM packages including patch and delta packages
.br
.B patch
\- update of the packages, it can include special scripts and messages
.br
.B pattern
\- group of packages 
.br
.B language
\- group of packages with language support
.br
.B product
\- group of packages, which are necessary to install a product


.TP
.B info (if) <name> ...
Displays full info for the specified packages or other resolvables.

.TP
.I \-r, \-\-repo <alias>
Work only with the repository specified by the alias.
.TP
.I \-t, \-\-type <type>
Type of resolvable (default: package). Currently supported resolvable types for
the info command are: package, patch, pattern, product.

.TP
.B install (in) [options] <name|rpm_file_uri> ...
.TP
.B install (in) [options] --capability <capability|rpm_file_uri> ...
Install or update packages or other resolvables.

The resolvables can be selected by their name or by a capability they provide.

Capability is: NAME, or "NAME[OP<EDITION>]", where OP is <, <=, =, >=, or > and
EDITION is VERSION[-RELEASE], for example: zypper=0.8.8-2.

The NAME component of a capability is not only a package name but any symbol
provided by packages: /bin/vi, libcurl.so.3, perl(Time::ParseDate).
Just remember to quote to protect the special characters from the shell,
for example: zypper\\>0.8.10 or 'zypper>0.8.10'

If EDITION is not specified, the newest available version will be installed.
This also means that if the package is already installed and newer versions
are available, it will get upgraded to the newest one.

Zypper is also able to install plain RPM files while trying to satisfy their
dependencies using packages from defined repositories. You can install a plain
RPM file by specifying its location in the install command arguments either
as a local path or an URI. E.g.:

\fB$ zypper install ~/rpms/foo.rpm http://some.site/bar.rpm\fR

Zypper will download the files into its cache directory (/var/cache/zypper/RPMS),
add this directory as a temporary \fBplaindir\fR repository and mark the
respective resolvables for installation.

.TP
\fI\-r, \-\-repo\fR <alias>
Install resolvables only from the repository specified by the alias.
.TP
\fI\-t, \-\-type\fR <resolvable_type>
Type of resolvable (default: package)
.TP
.I \-n, \-\-name
Select resolvables by their name (default).
.TP
.I \-f, \-\-force
Install even if the item is already installed (reinstall)
.TP
.I \-C, \-\-capability
Select resolvables by capabilities.
.TP
.I \-f, --force
Install the package even if it is already installed (reinstall).
.TP
.I \-l, \-\-auto\-agree\-with\-licenses
Automatically say 'yes' to third party license confirmation prompt. By using this option, you choose to agree with licenses of all third-party software this command will install. This option is particularly useful for administators installing the same set of packages on multiple machines (by an automated process) and have the licenses confirmed before.
.TP
.I      \-\-debug\-solver
Create solver test case for debugging. Use this option, if you think the
dependencies were not solved all right and attach the resulting /var/log/zypper.solverTestCase
directory to your bug report. To use this option, simply add it to the problematic
install or remove command. 
.TP
.I \-R, \-\-force\-resolution <on|off>
If 'on' is specified the solver is forced to find a solution, even if it would
mean removing all packages with unfulfilled requirements. Otherwise it reports
a dependency problem and prompt the user to resolve it manually.

The default value is 'on' in the interactive mode and 'off' in the
non-interactive mode. If this option is specified, it takes the preference.
.TP
.I \-D, \-\-dry\-run
Test the installation, do not actually install any package. This option will
add the \-\-test option to the rpm commands run by the install command.

.TP
.B source-install (si) <name> ...
Install source packages specified by their names.

This command will try to find the newest available versions of the source packages and use rpm -i to install them.

.TP
.B list-updates (lu) [options]
List available updates.
.TP
\fI\-t, --type\fR <resolvable_type>
Type of resolvable (default: patch)
.TP
\fI\-r, \-\-repo\fR <alias>
List only updates from the repository specified by the alias.

See also the NOTE at
.BR update .

.TP
.B remove (rm) [options] <name> ...
.TP
.B remove (rm) [options] --capability <capability> ...
Remove packages or other resolvables.

The resolvables can be selected by their name or by a capability they provide.
For details see the install command

.TP
\fI\-r, \-\-repo\fR <alias>
Operate only with resolvables from repository specified by alias.
.TP
\fI\-t, -\-type\fR <resolvable_type>
Type of resolvable (default: package)
.TP
.I \-n, \-\-name
Select resolvables by their name (default).
.TP
.I \-C, \-\-capability
Select resolvables by capabilities.
.TP
.I      \-\-debug\-solver
Create solver test case for debugging. See the install command for details.
.TP
.I \-R, \-\-force\-resolution
Force the solver to find a solution, even if it would mean removing all packages
with unfulfilled requirements.
.TP
.I \-D, \-\-dry\-run
Test the removal of packages, do not actually remove anything. This option will
add the \-\-test option to the rpm commands run by the remove command.

.TP
.B update (up) [options]
Update all installed packages or other resolvables with patches or their
newer versions, where applicable. To update individual packages, use zypper
install <name> (see documentation of the install command for details).

.TP
\fI\-t, -\-type\fR <resolvable_type>
Type of resolvable (default: patch)
.TP
\fI\-r, \-\-repo\fR <alias>
Limit updates to repository specified by alias.
.TP
.I     \-\-skip\-interactive
This will skip interactive patches, that is, those that need reboot,
contain a message, or update a package whose license needs to be
confirmed.
.TP
.I \-l, \-\-auto\-agree\-with\-licenses
Automatically say 'yes' to third party license confirmation prompt. By using this option, you choose to agree with licenses of all third-party software this command will install. This option is particularly useful for administators installing the same set of packages on multiple machines (by an automated process) and have the licenses confirmed before.
.TP
.I      \-\-debug\-solver
Create solver test case for debugging. See the install command for details.
.TP
.I \-R, \-\-force\-resolution
Force the solver to find a solution, even if it would mean removing all packages
with unfulfilled requirements.
.TP
.I \-D, \-\-dry\-run
Test the update, do not actually install or update any package. This option will
add the \-\-test option to the rpm commands run by the update command.

.B NOTE:
Zypper prefers to update only those packages for which a patch
description exists, like on the SUSE update servers. To operate on all
packages for which there is a better version instead, select \fI--type
package\fR which is also the default in rug compatibility mode.

.TP
.B dist-upgrade (dup) [options]
Perform a distribution upgrade. This command performs an update of all packages
with a special resolver algorithm which takes care of package splits, pattern
and product updates, etc.

.TP
\fI\-r, \-\-repo\fR <alias>
Limit updates to repository specified by alias.
.TP
.I \-l, \-\-auto\-agree\-with\-licenses
Automatically say 'yes' to third party license confirmation prompt. By using this option, you choose to agree with licenses of all third-party software this command will install. This option is particularly useful for administators installing the same set of packages on multiple machines (by an automated process) and have the licenses confirmed before.
.TP
.I      \-\-debug\-solver
Create solver test case for debugging. See the install command for details.
.TP
.I \-D, \-\-dry\-run
Test the upgrade, do not actually install or update any package. This option will
add the \-\-test option to the rpm commands run by the dist-upgrade command.

.TP
\fBsearch\fR (\fBse\fR) [\fIoptions\fR] [\fBquerystring\fR] ...
Search for resolvables matching given strings. * (any substring) and ? (any character) wildcards can also be used within search strings.
.IP
Results of search are printed in a table with following columns: S (status), Catalog, Type (type of resolvable), Name, Version, Arch (architecture). Status column can contain following values: i - installed, v - another version installed, or an empty space for neither of the former cases.
.IP
In \fBrug compatibility mode\fR the --type option defaults to \fBpackage\fR. Furthermore, Instead of the Type column, rug's Bundle column is printed, however, with no contents.
.IP
This command accepts the following options:

.TP
\fI    \-\-match\-all\fR
Search for a match to all search strings (default).
.TP
\fI    \-\-match\-any\fR
Search for a match to any of the search strings.
.TP
\fI    \-\-match\-substrings\fR
Matches for search strings may be partial words (default).
.TP
\fI    \-\-match\-words\fR
Matches for search strings may only be whole words.
.TP
\fI    \-\-match-exact\fR
Searches for an exact name of the resolvable.
.TP
.I \-d, \-\-search\-descriptions
Search also in summaries and descriptions.
.TP
.I \-C, \-\-case\-sensitive
Perform case-sensitive search.
.TP
.I \-i, \-\-installed\-only
Show only resolvables that are already installed.
.TP
.I \-u, \-\-uninstalled\-only
Show only resolvables that are not currently installed.
.TP
.I \-t, -\-type <type>
Search only for resolvables of specified type. See the beginning of the subsection for the list of available resolvable types.
Multiple \-t option are allowed.
.TP
.I \-r, \-\-repo <alias>
Search only in the repository specified by the alias.
Multiple \-r options are allowed.
.TP
\fI    \-\-sort\-by\-name\fR
Sort resolvables by name (default).
.TP
\fI    \-\-sort\-by\-repo\fR
Sort resolvables by catalog, not by name.

.SS Patch Management

.TP
.B patch-check (pchk)
Check for patches. Displays a count of applicable patches and how many
of them have the security category.
.PP
See also the EXIT CODES section for details on exit status of 0, 100, and 101
returned by this command.
.TP
.I \-r, \-\-repo <alias>
Check for patches only in the repository specified by the alias.

.TP
.B patches (pch)
List patches. Lists all patches that are available, including
installed and not applicable ones.
.TP
.I \-r, \-\-repo <alias>
Check for patches only in the repository specified by the alias.

.SS Repository Management

.PP
zypper is able to work with YaST, YUM, and aptrpm
repositories, ZENworks 7 Linux Management, ZENworks 6.6.x Linux
Management servers, as well as local files.

.TP
.B addrepo (ar) [options] <URI> <alias>
Add a new repository specified by URI and assign specified alias to it.
.TP
\fI\-r, \-\-repo\fR <FILE.repo>
Read URI and alias from specified .repo file
.TP
\fI\-t, \-\-type\fR <TYPE>
Type of repository (yast2, rpm-md, or plaindir). There are several aliases
defined for these types:
\fByast2\fR - susetags, yast, YaST, YaST2, YAST;
\fBrpm-md\fR - repomd, rpmmd, yum, YUM;
\fBplaindir\fR - Plaindir.
.TP
\fI\-d, \-\-disabled\fR
Add the repository as disabled.
.TP
\fI\-n, \-\-no\-refresh\fR 
Add the repository with auto-refresh disabled.
.PP
NOTE: This command does not automatically refresh the newly added repositories. You have to use the \fBrefresh\fR command after finishing your modifications to repositories with \fB*repo\fR commands.

.TP
.B removerepo (rr) [options] <alias|URI>
Delete repository specified by alias or URI.
.TP
\fI    --loose-auth\fR
Ignore user authentication data in the URI
.TP
\fI    --loose-query\fR
Ignore query string in the URI

.TP
.B repos (lr)
List all defined repositories.
.IP
The following data are printed for each repository found: # (repository number), Enabled (whether the repository is enabled), Refresh (whether autorefresh is enabled for the repository), Type (rpm-md, yast2, plaindir), Alias (shorthand for Name), and Name. If -v global option is used, an additional URI column will be displayed containing the base URI of the repository.

Repository number is a unique identifier of the repository in current repository set. If you add, remove or change a repository, the numbers may change. Beware of that when using the numbers with the repository handling commands (although not possible right now, the feature will be reimplmented soon). On the other hand, using the alias instead of the number is always safe.

.TP
.I \-e, \-\-export <FILE|->
This option causes zypper to write repository definition of all defined
repositories into a single file in repo file format.
If '\-' is specified instead of a file name,
the repositories will be written to the standard output.   

.TP
.B renamerepo (nr) <alias> <new-alias>
Assign new alias to the repository specified by alias.

.TP
.B modifyrepo (mr) <options> <alias>
Modify properties of the repository specified by alias.
.TP
\fI\-e, \-\-enable\fR
Enable the repository.
.TP
\fI\-d, \-\-disable\fR
Disable the repository.
.TP
\fI\-a, \-\-enable-autorefresh\fR
Enable auto-refresh for the repository.
.TP
\fI    \-\-disable\-autorefresh\fR
Disable auto-refresh for the repository.

.TP
.B refresh (ref) [alias|#] ...
Refresh repositories specified by their alias or number. If no repositories are specified, all enabled repositories will be refreshed.
.IP
See also METADATA REFRESH POLICY section for more details.
.TP
.I \-f, \-\-force
Force a complete refresh of specified repositories. This option will cause both the download of raw metadata and parsing of the metadata to be forced even if everything indicates a refresh is not needed.
.TP
.I \-b, \-\-force\-build
Force only reparsing of cached metadata and rebuilding of the database. Raw metadata download will not be forced.
.TP
.I \-d, \-\-force\-download
Force only download of current copy of repository metadata. Parsing and rebuild of the database will not be forced.
.TP
.I \-B, \-\-build\-only
Only parse the metadata and build the database, don't download raw metadata into the cache. This will enable you to repair damaged database from cached data without accessing network at all.
.TP
.I \-D, \-\-download\-only
Only download the raw metadata, don't parse it or build the database.

.SH "GLOBAL OPTIONS"

.TP 
.I \-h, \-\-help
Help. If a \fBcommand\fR is specified together with --help option, command specific help is displayed.
.TP
.I \-V, \-\-version
Print zypper version number and exit.
.TP
.I \-v, \-\-verbose
Increase verbosity. For debugging output specify this option twice.
.TP
.I \-q, \-\-quiet
Suppress normal output. Brief (esp. result notification) messages and error messages will still be printed, though. If used together with conflicting --verbose option, the --verbose option takes preference.
.TP
.I \-t, \-\-terse
Terse output for machine consumption.
.TP
.I \-s, \-\-table\-style
Specifies table style to use. Table style is identified by an integer number. TODO
.TP
.I \-r, \-\-rug\-compatible
Turns on rug compatibility. See section COMPATIBILITY WITH RUG for details.
.TP
.I \-n, \-\-non\-interactive
Switches to non-interactive mode. In this mode zypper doesn't ask user to type answers to various prompts, but uses default answers automatically. The behaviour of this option is somewhat different than that of options like '--yes', since zypper can answer different answers to different questions. The answers also depend on other options like '--no-gpg-checks'.
.TP
.I \-D, \-\-reposd\-dir <dir>
Use the specified directory to look for the repository definition (*.repo) files.
The default value is /etc/zypp/repos.d.
.TP
.I \-C, \-\-cache\-dir <dir>
Use an alternative directory to look for the repository meta-data cache database file (zypp.db).
The default value is /var/cache/zypp. 
.TP
.I    \-\-raw\-cache\-dir <dir>
Use the specified directory for storing raw copies of repository meta-data files.
The default value is /var/cache/zypp/raw.
.LP
Repository Options:
.TP
.I      \-\-no\-gpg\-checks
Ignore GPG check failures and continue. If a GPG issue occurs when using this
option zypper prints and logs a warning and automatically continues without
interrupting the operation. Use this option with causion, as you can easily
overlook security problems by using it.
.TP
.I \-p, \-\-plus\-repo <URI>
Use an additional repository for this operation. The repository aliased tmp#
and named by the specified URI will be added for this operation and removed
at the end. You can specify this option multiple times.
.TP
.I \-\-disable\-repositories
Do not read meta-data from repositories. This option will prevent loading of
resolvables from repositories, thus making zypper work only with the installed
resolvables (if \-\-disable\-system\-resolvables was not specified).
.TP
.I \-\-no\-refresh
Do not auto-refresh repositories (ignore the autorefresh setting). Useful to save
time when doing operations like search, if there is not a need to have
a completely up to date meta-data.
.LP
Target Options:
.TP
.I \-R, \-\-root <dir>
Operates on a different root directory. This option influences the location
of the repos.d directory and the meta-data cache directory and also causes rpm
to be run with the --root option to do the actual installation or removal of
packages. Note that the ZYpp lock is still created in the original system,
as well as temporary files. See also the FILES section.
.TP
.I \-\-disable\-system\-resolvables
This option servers mainly for testing purposes. It will cause zypper to act
as if there were no packages installed in the system. Use with causion as you
can damage your system using this option. 

.SH "METADATA REFRESH POLICY"
.LP
Zypper works with the metadata (information extracted from the RPM packages and other data) stored within repositories. The following refresh (metadata update) policy has been established in order to ensure zypper is working on the up-to-date metadata.
.LP
Refreshing a repository means downloading metadata of resolvables from media (if needed), storing it in local cache (typically under /var/cache/zypp/raw/<alias> directory) and preparsing the metadata into an sqlite database (/var/cache/zypp/zypp.db).
.LP
The metadata get refreshed either automatically or on user request. An \fBautomatic refresh\fR takes place right before reading metadata from the database if the \fBautorefresh is enabled\fR for the repository and the metada is reported as being out of date. If the \fBautorefresh is disabled\fR, the repository will only be refreshed on user request. You can request a refresh by calling \fBzypper refresh\fR (see the documentation of the refresh command for details).
.LP
The status of the repository metadata is checked for changes before actually doing the refresh. A change is detected by downloading one or two metadata index files (small files) and comparing the checksums of the cached ones and the remote ones. If the files differ, the repository is out of date and will be refreshed.
.LP
To delay the up-to-date check (and thus the automatic refresh) for a certain number of minutes, edit the value of the repo.refresh.delay attribute of ZYpp config file (/etc/zypp/zypp.conf). This means, zypper will not even try to download and check the index files, and you will be able to use zypper for operations like search or info without internet access or root privileges.

.SH "LOCKS"
.LP
The file
.B /etc/zypp/locks
can contain a list of packages to be locked. Installed packages which match one
of the items in this list will not be updated or removed by the solver.
Similarly, those matching packages which have not yet been installed, will not be
considered for installation. 

Empty lines and lines beginning with \fB#\fR are ignored. Each line is of the form
"\fIPATTERN \fR[ \fIOP EDITION \fR]"
where
.I PATTERN
is a name with shell wildcards \fB?\fR and \fB*\fR,
.I OP
is one of \fB< <=  = >=  >\fR,  and 
.I EDITION
is \fI VERSION\fR[\fB-\fIRELEASE\fR].

.TP
Example:
# Don't update the old KDE
.br
kde* < 3.5


.SH "FILES"
.TP
.B /etc/zypp/repos.d
Directory containing repository definition (*.repo) files.
You can use the \fBrepo\fR commands to manipulate these files, or you can edit
them yourself. In either case, after doing the modifications, executing
\fBzypper refresh\fR is strongly recommended.

You can use the \-\-reposd\-dir global option to use an alternative directory
for this purpose or the \-\-root option to make this directory relative to the
specified root directory.
.TP
.B /etc/zypp/zypp.conf
ZYpp configuration file.
.TP
.B /etc/zypp/locks
File with package lock definitions, see the section LOCKS.
.TP
.B /var/cache/zypp/raw
Directory for storing raw metadata contained in repositories.
Use the \-\-raw\-cache\-dir global option to use an alternative directory
for this purpose or the \-\-root option to make this directory relative to the
specified root directory.
.TP
.B /var/cache/zypp/zypp.db
Sqlite database file containing pre-parsed metadata of all repositories.
Use the \-\-cache\-dir global option to use an alternative directory
for the zypp.db file or the \-\-root option to make its default location
relative to the specified root directory.
.TP
.B ~/.zypper_history
Command history for the shell.

.SH "EXIT CODES"
.LP
There are several exit codes defined for zypper for use e.g. within scripts. These codes are defined in header file src/zmart.h found in zypper source package. Codes from interval (1-5) denote an error, numbers (100-103) provide a specific information, 0 represents a normal successfull run. Following is a list of these codes with descriptions.
.TP
0 - ZYPPER_EXIT_OK
Successfull run of zypper with no special info.
.TP
1 - ZYPPER_EXIT_ERR_BUG
Unexpected situation occured, probably caused by a bug.
.TP
2 - ZYPPER_EXIT_ERR_SYNTAX
zypper was invoked with an invalid command or option, or a bad syntax.
.TP
3 - ZYPPER_EXIT_ERR_INVALID_ARGS
Some of provided arguments were invalid. E.g. an invalid URI was provided to the addrepo command.
.TP
4 - ZYPPER_EXIT_ERR_ZYPP
A problem reported by ZYPP library. E.g. another instance of ZYPP is running.
.TP
5 - ZYPPER_EXIT_ERR_PRIVILEGES
User invoking zypper has insufficient privileges for specified operation.
.TP
100 - ZYPPER_EXIT_INF_UPDATE_NEEDED
Returned by the patch-check command if there are patches available for installation.
.TP
101 - ZYPPER_EXIT_INF_SEC_UPDATE_NEEDED
Returned by the patch-check command if there are security patches available for installation.
.TP
102 - ZYPPER_EXIT_INF_REBOOT_NEEDED
Returned after a successfull installation of a patch which requires reboot of computer.
.TP
103 - ZYPPER_EXIT_INF_RESTART_NEEDED
Returned after a successfull installation of a patch which requires restart of the package manager itself. This means that one of patches to be installed affects the package manager itself and the command used (e.g. zypper update) needs to be executed once again to install any remaining patches.
.TP
104 - ZYPPER_EXIT_INF_CAP_NOT_FOUND
Returned by the \fBinstall\fR and the \fBremove\fR command in case any of the
arguments does not match any of the available (or installed) resolvable names
or other capabilities.

.SH "COMPATIBILITY WITH RUG"
.LP
zypper is designed to be compatible with rug, which is a command\-line interface to the ZENworks Linux Management (ZLM) agent. Compared to rug, zypper does not need the ZLM daemon to run, and is intented to provide more and improved functionality. Following is a list of zypper-rug command aliases, supported rug command line options, and compatibility notes. See also compatibility notes in descriptions of zypper commands. 
.LP
To enable rug compatible behaviour, use the \-r or \-\-rug\-compatible global option with each command.

.SS Service Management Commands
.LP
ZENworks distinguishes services and catalogs. A service is
added by URI and contains one or more catalogs. Libzypp does not have
this distinction (yet) but for compatibility it is able to use the same command
and option names (service-add, \-\-catalog) as rug.
.LP
Currently, a Repository in zypper is a synonym for both Service and Catalog in ZLM.
.TP
.I rug service-add (sa)
zypper addrepo (ar)

.TP
.I rug service-delte (sd)
zypper removerepo (rr)

.TP
.I rug service-list (sl)
zypper repos (lr)

.IP
 zypper doesn't include 'Enabled' and 'Refresh' columns and prints rug's 'Status' column with values "Active" or "Disabled" instead.


.SS Package Management Commands

.TP
.I rug install (in)
zypper install (in)
.RS
.TP
.I \-y, \-\-no\-confirm
Don't require user interaction. This option is implemented using zypper's non-interactive mode.
.TP
.I      \-\-agree\-to\-third\-party\-licenses
This option is an alias to zypper's \-\-auto-agree\-with\-licenses option.
.TP
.I \-R, \-\-force\-resolution <on|off>
This option is not available in rug and zypper uses the 'force-resolution'
solver mode by default when running rug in compatible mode. However, it is
possible to turn the forcing of resolution off using this option even in
rug-compatible mode.
.RE

.TP
.I rug remove (rm)
zypper remove (rm)
.RS
.TP
.I \-y, \-\-no\-confirm
Don't require user interaction. This option is implemented using zypper's non-interactive mode.
.TP
.I \-R, \-\-force\-resolution <on|off>
This option is not available in rug and zypper uses the 'force-resolution'
solver mode by default when running rug in compatible mode. However, it is
possible to turn the forcing of resolution off using this option even in
rug-compatible mode.
.RE

.TP
.I rug update (up)
zypper update (up)
.RS
.TP
.I \-y, \-\-no\-confirm
Don't require user interaction. This option is implemented using zypper's non-interactive mode.
.TP
.I      \-\-agree\-to\-third\-party\-licenses
This option is an alias to zypper's \-\-auto-agree\-with\-licenses option.
.TP
.I \-R, \-\-force\-resolution <on|off>
This option is not available in rug and zypper uses the 'force-resolution'
solver mode by default when running rug in compatible mode. However, it is
possible to turn the forcing of resolution off using this option even in
rug-compatible mode.
.RE

.TP
.I rug search (se)
zypper search (se)
.TP
\fI    \-\-sort\-by\-catalog\fR
Sort resolvables by catalog, not by name. This option is an alias to zypper's
\-\-sort\-by\-repo option.

.SS Patch Management Commands

.TP
.I rug patch-info
zypper info -t patch

.SS Pattern Management Commands

.TP
.I rug pattern-info
zypper info -t pattern

.SS Product Management Commands

.TP
.I rug product-info
zypper info -t product

.SS Other Compatibility Notes

.TP
\fI\-c, \-\-catalog\fR <catalog>
This option is an alias to zypper's \-\-repo <alias> and it will restrict
the operation of commands like search, install, etc to the repository specified
by the alias.


.SH "AUTHORS"
.LP
Martin Vidner <mvidner@suse.cz>
.br
Duncan Mac-Vicar <dmacvicar@suse.de>
.br
Jan Kupec <jkupec@suse.cz>

.SH "SEE ALSO"
.LP
rug(1), YaST2(8)
