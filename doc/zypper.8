.TH "zypper" "8" "0.12.3" "zypper" "System Tools"
.SH "SYNTAX"
.LP
zypper [\fI\-\-global\-options\fR] <\fBcommand\fR> [\fI\-\-command\-options\fR] [\fBcommand-arguments\fR]

zypper \fBhelp\fR [\fBcommand\fR]
.SH "DESCRIPTION"
.LP
zypper is a command\-line interface to ZYpp system management library.
It can be used to install, update, remove software, manage repositories, perform
various queries, and more.

.SH CONCEPTS

Most of the following concepts are common for all applications based on the
libzypp package management library, but there are some zypper specifics.

.SS Repositories
.LP
Libzypp works with package metadata, that is information about packages and their
relations extracted from RPM packages and other data like patch information,
pattern definitions, etc. These data are stored together with the RPM files in
folders called \fBrepositories\fR. Repositories can be placed on various media
like an HTTP or FTP server, DVD, or a folder on a local disc.

.SS Resource Identfiers (URI)
To specify locations of repositories or other resources (RPM files, .repo
files) you can use any type of URIs supported by libzypp. See
http://en.opensuse.org/Libzypp/URI for a complete list and usage examples.

In addition to these URIs you can use plain directory and file paths in which
case zypper automatically treats them as dir:/path URIs.

.SS Refresh
.LP
Refreshing a repository means downloading metadata of packages from the medium
(if needed), storing it in local cache (typically under
/var/cache/zypp/raw/<alias> directory) and preparsing the metadata into .solv
files (building the solv cache), typically under /var/cache/zypp/solv/<alias>.
.LP
The metadata get refreshed either automatically or on user request. An
\fBautomatic refresh\fR takes place right before reading metadata from
the database if the \fBauto-refresh is enabled\fR for the repository and the
metada is reported to be out of date. If the \fBauto-refresh is disabled\fR,
the repository will only be refreshed on user request. You can request
a refresh by calling \fBzypper refresh\fR (see the documentation of the refresh
command for details).
.LP
The repository metadata are checked for changes before actually doing the
refresh. A change is detected by downloading one or two metadata index files
(small files) and comparing the checksums of the cached ones and the remote
ones. If the files differ, the repository is out of date and will be refreshed.
.LP
To delay the up-to-date check (and thus the automatic refresh) for a certain
number of minutes, edit the value of the repo.refresh.delay attribute of ZYpp
config file (/etc/zypp/zypp.conf). This means, zypper will not even try
to download and check the index files, and you will be able to use zypper for
operations like search or info without internet access or root privileges.

.SS Services
.LP
Repository Index Service (RIS) is a special type of repository which contains
a list of other repositories. This list can be generated dynamically by the
server according to some URI parameters or user name, or can be static.
See Service Management section for more details.

.SS Package Types
.LP
zypper works with several types of resource objects, called
.BR resolvables.
A resolvable is a package, patch, pattern, or a product.
.LP
.B package
\- an ordinary RPM package
.br
.B patch
\- update of one or more packages. A patch can include special scripts and
messages to be run or shown during installation of the update.
.br
.B pattern
\- group of packages required or recommended to install some functionality
.br
.B product
\- group of packages which are necessary to install a product
.LP
Throughout this manual we will refer to resolvables simply as \fIpackages\fR
and to resolvable types as \fIpackages types\fR.


.SH "COMMANDS"
.LP
zypper provides a number of \fBcommands\fR. Each command accepts the options
listed in the GLOBAL OPTIONS section. These options must be specified
\fIbefore\fR the command name. In addition, many commands have specific
options, which are listed in this section. These command-specific options must
be specified \fIafter\fR the name of the command and \fIbefore\fR any
of the command arguments.

.SS General Commands

.TP
.B help [command]
Shows help texts. If invoked without any argument (just \'zypper\' or
\'zypper\ help\'), zypper displays global help text which lists all available
global options and commands (except those provided only for compatibility
with rug).

If invoked with a command name argument, zypper displays help for the
specified command, if such command exists. Long as well as short variants
of the command names can be used.

For your convenience, zypper help can be invoked in any of the following ways:

.B $ zypper help [command]
.br
.B $ zypper -h|--help [command]
.br
.B $ zypper [command] -h|--help

.TP
.B shell (sh)
Starts a shell for entering multiple commands in one session.
Exit the shell using "exit", "quit", or Ctrl-D.

The shell support is not complete
so expect bugs there. However, there's no urgent need to use the shell
since libzypp became so fast (opensSUSE 11.0), but still, you're welcome
to experiment with it.


.SS Package Management Commands

.TP
.B info (if) <name> ...
Displays full info for the specified packages.

.TP
.I \-r, \-\-repo <alias|#|URI>
Work only with the repository specified by the alias, number or URI. This
option can be used multiple times.
.TP
.I \-t, \-\-type <type>
Type of package (default: package). Currently supported package types for
the info command are: package, patch, pattern, product.

.TP
.B install (in) [options] <name|capability|rpm_file_uri> ...
Install or update packages.

The packages can be selected by their name or by a capability they provide.

Capability is: NAME, or "NAME[OP<EDITION>]", where OP is <, <=, =, >=, or > and
EDITION is VERSION[-RELEASE], for example: zypper=0.8.8-2.

The NAME component of a capability is not only a package name but any symbol
provided by packages: /bin/vi, libcurl.so.3, perl(Time::ParseDate).
Just remember to quote to protect the special characters from the shell,
for example: zypper\\>0.8.10 or 'zypper>0.8.10'

If EDITION is not specified, the newest installable version will be installed.
This also means that if the package is already installed and newer versions
are available, it will get upgraded to the newest installable version.

Zypper is also able to install plain RPM files while trying to satisfy their
dependencies using packages from defined repositories. You can install a plain
RPM file by specifying its location in the install command arguments either
as a local path or an URI. E.g.:

\fB$ zypper install ~/rpms/foo.rpm http://some.site/bar.rpm\fR

Zypper will download the files into its cache directory (/var/cache/zypper/RPMS),
add this directory as a temporary \fBplaindir\fR repository and mark the
respective packages for installation.

In the install command, you can specify also packages you wish to remove in
addition to the packages you wish to install, by prepending their names by
a '-' or '~' character. For example:

.B $ zypper install vim -emacs
.br
.B $ zypper remove emacs +vim

will both install vim and remove emacs. Note that if you choose to use '-' with the
first package you specify, you need to write '--' before it to prevent it's
interpretation as a command option.

.B $ zypper install -- -boring-game great-game great-game-manual

.TP
\fI\-r, \-\-repo\fR <alias|#|URI>
Install packages only from the repository specified by the alias, number or URI.
This option can be used multiple times.
.TP
\fI\-t, \-\-type\fR <type>
Type of package (default: package). See the beginning of this subsection for the list
of available package types.
.TP
.I \-n, \-\-name
Select packages by their name, don't try to select by capabilities.
.TP
.I \-f, \-\-force
Install even if the item is already installed (reinstall)
.TP
.I \-C, \-\-capability
Select packages by capabilities.
.TP
.I \-l, \-\-auto\-agree\-with\-licenses
Automatically say 'yes' to third party license confirmation prompt. By using this option, you choose to agree with licenses of all third-party software this command will install. This option is particularly useful for administators installing the same set of packages on multiple machines (by an automated process) and have the licenses confirmed before.
.TP
.I \ \ \ \ \-\-debug\-solver
Create solver test case for debugging. Use this option, if you think the
dependencies were not solved all right and attach the resulting /var/log/zypper.solverTestCase
directory to your bug report. To use this option, simply add it to the problematic
install or remove command. 
.TP
.I \-R, \-\-no\-force\-resolution 
Do not force the solver to find a solution. Instead, report
dependency problem and prompt the user to resolve it manually.
.TP
.I \ \ \ \ \-\-force\-resolution
Force the solver to find a solution, even if it would
mean removing all packages with unfulfilled requirements.

The default behavior is 'force' in the interactive mode and 'no-force' in the
non-interactive mode. If this option is specified, it takes the preference.
.TP
.I \-D, \-\-dry\-run
Test the installation, do not actually install any package. This option will
add the \-\-test option to the rpm commands run by the install command.

.TP
.B source-install (si) <name> ...
Install specified source packages and their build dependencies.

This command will try to find the newest available versions of the source packages and use rpm -i to install them.

.TP
.I \-d, \-\-build\-deps\-only
Install only build dependencies of specified packages.
.TP
.I \-D, \-\-no\-build\-deps
Don't install build dependencies.
.TP
.I \-r, \-\-repo <alias|#|URI>
Install packages only from specified repositories.
This option can be used multiple times.

.TP
.B verify (ve) [options]
Check whether dependencies of installed packages are satisfied.

In case that any dependency problems are found, zypper suggests packages
to install or remove to fix them.

.TP
.I \-D, \-\-dry-run
Test the repair, do not actually do anything to the system.
.TP
.I \-r, \-\-repo <alias|#|URI>
Use only specified repositories to install missing packages.
.TP
.I \ \ \ \ \-\-debug\-solver
Create solver test case for debugging. See the install command for details.

.TP
.B install-new-recommends (inr) [options]
Install newly added packages recommended by already installed ones.
This can typically be used to install language packages recently added
to repositories or drivers for newly added hardware.

.TP
.I \-r, \-\-repo <alias|#|URI>
Use only specified repositories to install packages.
.TP
.I \-D, \-\-dry-run
Test the installation, do not actually install anything.
.TP
.I \ \ \ \ \-\-debug\-solver
Create solver test case for debugging. See the install command for details.

.TP
.B list-updates (lu) [options]
List available updates.
.TP
\fI\-t, --type\fR <type>
Type of package (default: patch). See the beginning of this subsection for the list
of available package types.
.TP
\fI\-r, \-\-repo\fR <alias|#|URI>
List only updates from the repository specified by the alias, number or URI.
This option can be used multiple times.

See also the NOTE at
.BR update .

.TP
.B remove (rm) [options] <name> ...
.TP
.B remove (rm) [options] --capability <capability> ...
Remove (uninstall) packages.

The packages can be selected by their name or by a capability they provide.
For details see the install command

.TP
\fI\-r, \-\-repo\fR <alias|#|URI>		
Operate only with packages from repository specified by alias, number or URI.
This option can be used multiple times.
.TP
\fI\-t, -\-type\fR <type>
Type of package (default: package). See the beginning of this subsection for the list
of available package types.
.TP
.I \-n, \-\-name
Select packages by their name (default).
.TP
.I \-C, \-\-capability
Select packages by capabilities.
.TP
.I      \-\-debug\-solver
Create solver test case for debugging. See the install command for details.
.TP
.I \-R, \-\-no\-force\-resolution 
Do not force the solver to find a solution. Instead, report
dependency problem and prompt the user to resolve it manually.
.TP
.I \ \ \ \ \-\-force\-resolution
Force the solver to find a solution, even if it would
mean removing all packages with unfulfilled requirements.

The default behavior is 'force' in the interactive mode and 'no-force' in the
non-interactive mode. If this option is specified, it takes the preference.
.TP
.I \-D, \-\-dry\-run
Test the removal of packages, do not actually remove anything. This option will
add the \-\-test option to the rpm commands run by the remove command.

.TP
.B update (up) [options] [packagename] ...
Update installed packages with patches or newer version, where applicable.

To update individual packages, specify one or more package names. You can
use the '*' and '?' wildcard characters in the package names to specify
multiple packages matching the pattern.

.B NOTE:
Zypper prefers to update only those packages for which a patch
description exists, like on the SUSE update servers. To operate on all
packages for which there is a better version instead, select \fI--type
package\fR which is also the default in rug compatibility mode.

.TP
\fI\-t, -\-type\fR <type>
Type of package (default: patch). See the beginning of this subsection for the list
of available package types.
.TP
\fI\-r, \-\-repo\fR <alias|#|URI>
Limit updates to repository specified by alias, number or URI.
This option can be used multiple times.
.TP
.I     \-\-skip\-interactive
This will skip interactive patches, that is, those that need reboot,
contain a message, or update a package whose license needs to be
confirmed.
.TP
.I \-l, \-\-auto\-agree\-with\-licenses
Automatically say 'yes' to third party license confirmation prompt. By using this option, you choose to agree with licenses of all third-party software this command will install. This option is particularly useful for administators installing the same set of packages on multiple machines (by an automated process) and have the licenses confirmed before.
.TP
.I \ \ \ \ \-\-debug\-solver
Create solver test case for debugging. See the install command for details.
.TP
.I \-R, \-\-no\-force\-resolution 
Do not force the solver to find a solution. Instead, report
dependency problem and prompt the user to resolve it manually.
.TP
.I \ \ \ \ \-\-force\-resolution
Force the solver to find a solution, even if it would
mean removing all packages with unfulfilled requirements.

The default behavior is 'no-force'. If this option is specified, it takes the preference.
.TP
.I \-D, \-\-dry\-run
Test the update, do not actually install or update any package. This option will
add the \-\-test option to the rpm commands run by the update command.

.TP
.B dist-upgrade (dup) [options]
Perform a distribution upgrade. This command performs an update of all packages
with a special resolver algorithm which takes care of package splits, pattern
and product updates, etc.

.TP
\fI\-r, \-\-repo\fR <alias|#|URI>
Limit updates to repository specified by alias, number or URI.
This option can be used multiple times.
.TP
.I \-l, \-\-auto\-agree\-with\-licenses
Automatically say 'yes' to third party license confirmation prompt. By using this option, you choose to agree with licenses of all third-party software this command will install. This option is particularly useful for administators installing the same set of packages on multiple machines (by an automated process) and have the licenses confirmed before.
.TP
.I \ \ \ \ \-\-debug\-solver
Create solver test case for debugging. See the install command for details.
.TP
.I \-D, \-\-dry\-run
Test the upgrade, do not actually install or update any package. This option will
add the \-\-test option to the rpm commands run by the dist-upgrade command.

.TP
\fBsearch\fR (\fBse\fR) [\fIoptions\fR] [\fBquerystring\fR] ...
Search for packages matching given strings. * (any substring) and ? (any character) wildcards can also be used within search strings.
.IP
Results of search are printed in a table with following columns: S (status), Catalog, Type (type of package), Name, Version, Arch (architecture). Status column can contain following values: i - installed, v - another version installed, or an empty space for neither of the former cases.
.IP
In \fBrug compatibility mode\fR the --type option defaults to \fBpackage\fR. Furthermore, Instead of the Type column, rug's Bundle column is printed, however, with no contents.
.IP
This command accepts the following options:

.TP
\fI    \-\-match\-all\fR
Search for a match to all search strings (default).
.TP
\fI    \-\-match\-any\fR
Search for a match to any of the search strings.
.TP
\fI    \-\-match\-substrings\fR
Matches for search strings may be partial words (default).
.TP
\fI    \-\-match\-words\fR
Matches for search strings may only be whole words.
.TP
\fI    \-\-match-exact\fR
Searches for an exact name of the package.
.TP
.I \-d, \-\-search\-descriptions
Search also in summaries and descriptions.
.TP
.I \-C, \-\-case\-sensitive
Perform case-sensitive search.
.TP
.I \-i, \-\-installed\-only
Show only packages that are already installed.
.TP
.I \-u, \-\-uninstalled\-only
Show only packages that are not currently installed.
.TP
.I \-t, -\-type <type>
Search only for packages of specified type. See the beginning of the subsection for the list of available package types.
Multiple \-t option are allowed.
.TP
.I \-r, \-\-repo <alias|#|URI>
Search only in the repository specified by the alias, number or URI.		
Multiple \-r options are allowed.
.TP
.I \ \ \ \ \-\-sort\-by\-name
Sort packages by name (default).
.TP
.I \ \ \ \ \-\-sort\-by\-repo
Sort packages by catalog, not by name.
.TP
.I \-s, \-\-details
Show all available versions of found packages, each version in each repository
on a separate line.

.TP
.B patterns (pt) [options] [repository] ...
List all available patterns or all patterns from specified repositories.
Similar to \fBzypper search -s -t pattern\fR
.TP
.I \-r, \-\-repo <alias|#|URI>
Just another means to specify repositories.
.TP
.I \-i, \-\-installed\-only
Show only installed patterns.
.TP
.I \-u, \-\-uninstalled\-only
Show only patterns which are not installed.

.TP
.B products (pd) [options] [repository] ...
List all available products or all products from specified repositories.
Similar to \fBzypper search -s -t product\fR, but shows also the type of the product
(base, add-on).
.TP
.I \-r, \-\-repo <alias|#|URI>
Just another means to specify repositories.
.TP
.I \-i, \-\-installed\-only
Show only installed products.
.TP
.I \-u, \-\-uninstalled\-only
Show only products which are not installed.

.TP
.B what-provides (wp) <capability>
List all packages providing the specified capability. See also the \fBinstall\fR command for hint about capabilities.

.SS Patch Management

.TP
.B patch-check (pchk)
Check for patches. Displays a count of applicable patches and how many
of them have the security category.
.PP
See also the EXIT CODES section for details on exit status of 0, 100, and 101
returned by this command.
.TP
.I \-r, \-\-repo <alias|#|URI>
Check for patches only in the repository specified by the alias, number or URI.
This option can be used multiple times.

.TP
.B patches (pch)
List patches. Lists all patches that are available, including
installed and not applicable ones.
.TP
.I \-r, \-\-repo <alias|#|URI>
Check for patches only in the repository specified by the alias, number or URI.
This option can be used multiple times.

.SS Repository Management

.PP
zypper is able to work with YaST, YUM, and aptrpm
repositories, ZENworks 7 Linux Management, ZENworks 6.6.x Linux
Management servers, as well as local files.

.TP
.B addrepo (ar) [options] <URI> <alias> 
.TP
.B addrepo (ar) [options] <FILE.repo>

Add a new repository specified by URI and assign specified alias to it or specify URI to repo file.

Newly added repositories have auto-refresh disabled by default (except for repositories
imported from a .repo, having the auto-refresh enabled). To enable auto-refresh, use the
\fB\-\-refresh\fR option of the \fBmodifyrepo\fR command.

Also, this command does not automatically refresh the newly added repositories.
The repositories will get refreshed when used for the first time, or you can use
the \fBrefresh\fR command after finishing your modifications with \fB*repo\fR commands.
See also METADATA REFRESH POLICY section for more details.

.TP
\fI\-r, \-\-repo\fR <file.repo>
Read URI and alias from specified .repo file
.TP
\fI\-t, \-\-type\fR <type>
Type of repository (yast2, rpm-md, or plaindir). There are several aliases
defined for these types:
\fByast2\fR - susetags, yast, YaST, YaST2, YAST;
\fBrpm-md\fR - repomd, rpmmd, yum, YUM;
\fBplaindir\fR - Plaindir.
.TP
\fI\-d, \-\-disable\fR
Add the repository as disabled. Repositories are added as enabled by default.
.TP
\fI\-c, \-\-check\fR
Probe given URI.
.TP
\fI\-C, \-\-nocheck\fR
Don't probe URI, probe later during refresh.
.TP
\fI\-n, \-\-name\fR
Specify descriptive name for the repository.
.TP
\fI\-k, \-\-keep\-packages\fR
Enable RPM files caching for the repository.
.TP
\fI\-K, \-\-no-keep-packages\fR
Disable RPM files caching.
.TP
.I \-f, \-\-refresh
Enable autorefresh of the repository. The autorefresh is disabled by default when adding
new repositories.

.TP
.B removerepo (rr) [options] <alias|#|URI> ...
Delete repositories specified by aliases, numbers or URIs.
.TP
\fI    --loose-auth\fR
Ignore user authentication data in the URI
.TP
\fI    --loose-query\fR
Ignore query string in the URI

.TP
.B repos (lr) [options]
List all defined repositories.
.IP
The following data are printed for each repository found:
# (repository number), Enabled (whether the repository is enabled), Refresh
(whether auto-refresh is enabled for the repository), Type (rpm-md, yast2,
plaindir), Alias (shorthand for Name), and Name. Other columns can be added
using the options listed below.

Repository number is a unique identifier of the repository in current
set of repositories. If you add, remove or change a repository, the numbers may
change. Keep that in mind when using the numbers with the repository handling
commands. On the other hand, using the alias instead of the number is always
safe.

.TP
.I \-e, \-\-export <FILE.repo|->
This option causes zypper to write repository definition of all defined
repositories into a single file in repo file format.
If '\-' is specified instead of a file name,
the repositories will be written to the standard output.
.TP
.I \-u, \-\-uri
Add base URI column to the output.
.TP
.I \-p, \-\-priority
Add repository priority column to the output.
.TP
.I \-d, \-\-details
Show more information like URI, priority, type, etc.
.TP
.I \-U, \-\-sort\-by\-uri
Add base URI column and sort the list it.
.TP
.I \-P, \-\-sort\-by\-priority
Add repository priority column and sort the list by it.
.TP
.I \-A, \-\-sort\-by\-alias
Sort the list by alias.
.TP
.I \-N, \-\-sort\-by\-name
Sort the list by name.

.TP
.B renamerepo (nr) <alias|#|URI> <new-alias>
Assign new alias to the repository specified by alias, number or URI.

.TP
.B modifyrepo (mr) <options> <alias|#|URI>
Modify properties of the repository specified by alias, number or URI.
.TP
\fI\-e, \-\-enable\fR
Enable the repository.
.TP
\fI\-d, \-\-disable\fR
Disable the repository.
.TP
\fI\-r, \-\-refresh\fR
Enable auto-refresh for the repository.
.TP
\fI\-R, \-\-no\-refresh\fR
Disable auto-refresh for the repository.
.TP
.I \-p, \-\-priority <positive-integer>
Set priority of the repository. Priority of 1 is the highest, the higher the
number the lower the priority. Default priority is 99. Packages from
repositories with higher priority will be preferred even in case there is
a higher installable version available in the repository with a lower priority.
.TP
.I \-n, \-\-name
Set a descriptive name for the repository.
.TP
.I \-k, \-\-keep\-packages
Enable RPM files caching.
.TP
.I \-K, \-\-no\-keep\-packages
Disable RPM files caching.
.TP
.I \-a, \-\-all
Apply changes to all repositories.
.TP
.I \-l, \-\-local
Apply changes to all local repositories.
.TP
.I \-t, \-\-remote
Apply changes to all remote repositories (http/https/ftp).
.TP
.I \-m, \-\-medium\-type <type>
Apply changes to repositories of specified type. The type corresponds to the
repository URI scheme identifier like http, dvd, etc. You can find complete
list of valid types at http://en.opensuse.org/Libzypp/URI.

.TP
.B refresh (ref) [alias|#] ...
Refresh repositories specified by their alias or number. If no repositories are specified, all enabled repositories will be refreshed.
.IP
See also METADATA REFRESH POLICY section for more details.
.TP
.I \-f, \-\-force
Force a complete refresh of specified repositories. This option will cause both the download of raw metadata and parsing of the metadata to be forced even if everything indicates a refresh is not needed.
.TP
.I \-b, \-\-force\-build
Force only reparsing of cached metadata and rebuilding of the database. Raw metadata download will not be forced.
.TP
.I \-d, \-\-force\-download
Force only download of current copy of repository metadata. Parsing and rebuild of the database will not be forced.
.TP
.I \-B, \-\-build\-only
Only parse the metadata and build the database, don't download raw metadata into the cache. This will enable you to repair damaged database from cached data without accessing network at all.
.TP
.I \-D, \-\-download\-only
Only download the raw metadata, don't parse it or build the database.

.TP
.B clean [alias|#|URI] ...
Clean the local caches for all known or specified repositories. By default,
 only caches of downloaded packages are cleaned.
.TP
.I \-m, \-\-metadata
Clean repository metadata cache instead of package cache.
.TP
.I \-M, \-\-raw\-metadata
Clean repository raw metadata cache instead of package cache.
.TP
.I \-a, \-\-all
Clean both repository metadata and package caches.


.SS Serivce Management

(This group of commands is currently under development)

.TP
.B addservice (as) [options] <url> <alias>
TODO

.TP
.B removeservice (rs) [options] <alias|#|URI> ...
TODO

.TP
.B services (ls) [options]
TODO

.TP
.B refresh-services (refs) [options] <alias|#|URI> ...
TODO


.SS Package Locks Management
Package locks server the purpose of preventing changes to the set of installed
packages on the system. The locks are stored in form of a \fIquery\fR in
/etc/zypp/locks file (see also locks(5)).
Packages matching this query are then forbidden to change their installed
status; an installed package can't be removed, not installed package can't be installed.
When requesting to install or remove such locked package, you will get a dependency problem
dialog.

.TP
.B locks (ll)
List currently active package locks.

.TP
.B addlock (al) [options] <package-name> ...
Add a package lock. Specify packages to lock by exact name or by a glob pattern using '*' and '?'
wildcard characters. 

.TP
.I \-r, \-\-repo <alias|#|URI>
Restrict the lock to the specified repository.
.TP
.I \-t, \-\-type <type>
Type of resolvable (package, patch, pattern, product). Default: package.

.TP
.B removelock (rl) [options] <lock-number|package-name> ...
Remove specified package lock. Specify the lock to remove by its number obtained with 'zypper locks'
or by the package name.

.TP
.I \-r, \-\-repo <alias|#|URI>
Restrict the lock to the specified repository.


.SS Other Commands

.TP
.B versioncmp (vcmp) <version1> <version2>
Compare the versions supplied as arguments and tell whether version1 is older
or newer than version2 or the two version strings match.

The default output is in human-friendly form. If \fB--terse\fR global option
is used, the result is an integer number, negative/positive if version1 is
older/newer than version2, zero if they match.

.TP
.B targetos (tos)
Shows the ID string of the target operating system. The string has a form of
\fBdistroname-arch\fR. The string is determined by libzypp, the \fBdistroname\fR
is read from <current-rootdir>/etc/products.d/baseproduct and the architecture
is determined from uname and CPU flags.


.SH "GLOBAL OPTIONS"

.TP 
.I \-h, \-\-help
Help. If a \fBcommand\fR is specified together with --help option, command specific help is displayed.
.TP
.I \-V, \-\-version
Print zypper version number and exit.
.TP
.I \-v, \-\-verbose
Increase verbosity. For debugging output specify this option twice.
.TP
.I \-q, \-\-quiet
Suppress normal output. Brief (esp. result notification) messages and error messages will still be printed, though. If used together with conflicting --verbose option, the --verbose option takes preference.
.TP
.I \-A, \-\-no\-abbrev
Do not abbreviate text in tables. By default zypper will try to abbreviate
texts in some columns so that the table fits the width of the screen. If you
need to see the whole text, use this option.
.TP
.I \-t, \-\-terse
Terse output for machine consumption. Currently not used and provided only for
compatibility with rug.
.TP
.I \-s, \-\-table\-style
Specifies table style to use. Table style is identified by an integer number. TODO
.TP
.I \-r, \-\-rug\-compatible
Turns on rug compatibility. See section COMPATIBILITY WITH RUG for details.
.TP
.I \-n, \-\-non\-interactive
Switches to non-interactive mode. In this mode zypper doesn't ask user to type answers to various prompts, but uses default answers automatically. The behaviour of this option is somewhat different than that of options like '--yes', since zypper can answer different answers to different questions. The answers also depend on other options like '--no-gpg-checks'.
.TP
.I \-x, \-\-xmlout
Switches to XML output. This option is useful for scripts or graphical frontends
using zypper. For detailed information about this feature, see
http://en.opensuse.org/Zypper/XML_Output.
.TP
.I \-D, \-\-reposd\-dir <dir>
Use the specified directory to look for the repository definition (*.repo) files.
The default value is /etc/zypp/repos.d.
.TP
.I \-C, \-\-cache\-dir <dir>
Use an alternative directory to look for the repository metadata cache database files (solv files).
The default value is /var/cache/zypp/solv.
.TP
.I \ \ \ \ \-\-raw\-cache\-dir <dir>
Use the specified directory for storing raw copies of repository metadata files.
The default value is /var/cache/zypp/raw.
.LP
Repository Options:
.TP
.I \ \ \ \ \-\-no\-gpg\-checks
Ignore GPG check failures and continue. If a GPG issue occurs when using this
option zypper prints and logs a warning and automatically continues without
interrupting the operation. Use this option with caution, as you can easily
overlook security problems by using it.
.TP
.I \-p, \-\-plus\-repo <URI>
Use an additional repository for this operation. The repository aliased tmp#
and named by the specified URI will be added for this operation and removed
at the end. You can specify this option multiple times.
.TP
.I \ \ \ \ \-\-disable\-repositories
Do not read metadata from repositories. This option will prevent loading of
packages from repositories, thus making zypper work only with the installed
packages (if \-\-disable\-system\-resolvables was not specified).
.TP
.I \ \ \ \ \-\-no\-refresh
Do not auto-refresh repositories (ignore the auto-refresh setting). Useful to save
time when doing operations like search, if there is not a need to have
a completely up to date metadata.
.LP
Target Options:
.TP
.I \-R, \-\-root <dir>
Operates on a different root directory. This option influences the location
of the repos.d directory and the metadata cache directory and also causes rpm
to be run with the --root option to do the actual installation or removal of
packages. Note that the ZYpp lock is still created in the original system,
as well as temporary files. See also the FILES section.
.TP
.I \ \ \ \ \-\-disable\-system\-resolvables
This option servers mainly for testing purposes. It will cause zypper to act
as if there were no packages installed in the system. Use with caution as you
can damage your system using this option. 

.SH "FILES"
.TP
.B /etc/zypp/repos.d
Directory containing repository definition (*.repo) files.
You can use the \fBrepo\fR commands to manipulate these files, or you can edit
them yourself. In either case, after doing the modifications, executing
\fBzypper refresh\fR is strongly recommended.

You can use the \-\-reposd\-dir global option to use an alternative directory
for this purpose or the \-\-root option to make this directory relative to the
specified root directory.
.TP
.B /etc/zypp/zypp.conf
ZYpp configuration file.
.TP
.B /etc/zypp/locks
File with package lock definitions, see locks(5) manual page for details.
.TP
.B /var/cache/zypp/raw
Directory for storing raw metadata contained in repositories.
Use the \-\-raw\-cache\-dir global option to use an alternative directory
for this purpose or the \-\-root option to make this directory relative to the
specified root directory.
.TP
.B /var/cache/zypp/solv
Directory containing preparsed metadata in form of \fBsolv\fR files.
.TP
.B /var/cache/zypp/packages
If \fBkeeppackages\fR property is set for a repository (see the
\fBmodifyrepo\fR command), all the RPM file downloaded during installation
will be kept here. See also the \fBclean\fR command for cleaning these
cache directories.
.TP
.B ~/.zypper_history
Command history for the shell.

.SH "EXIT CODES"
.LP
There are several exit codes defined for zypper for use e.g. within
scripts. These codes are defined in header file src/zypper-main.h
found in zypper source package. Codes from interval (1-5) denote an
error, numbers (100-105) provide a specific information, 0
represents a normal successful run. Following is a list of these
codes with descriptions.
.TP
0 - ZYPPER_EXIT_OK
Successfull run of zypper with no special info.
.TP
1 - ZYPPER_EXIT_ERR_BUG
Unexpected situation occured, probably caused by a bug.
.TP
2 - ZYPPER_EXIT_ERR_SYNTAX
zypper was invoked with an invalid command or option, or a bad syntax.
.TP
3 - ZYPPER_EXIT_ERR_INVALID_ARGS
Some of provided arguments were invalid. E.g. an invalid URI was provided to the addrepo command.
.TP
4 - ZYPPER_EXIT_ERR_ZYPP
A problem reported by ZYPP library. E.g. another instance of ZYPP is running.
.TP
5 - ZYPPER_EXIT_ERR_PRIVILEGES
User invoking zypper has insufficient privileges for specified operation.
.TP
100 - ZYPPER_EXIT_INF_UPDATE_NEEDED
Returned by the patch-check command if there are patches available for installation.
.TP
101 - ZYPPER_EXIT_INF_SEC_UPDATE_NEEDED
Returned by the patch-check command if there are security patches available for installation.
.TP
102 - ZYPPER_EXIT_INF_REBOOT_NEEDED
Returned after a successfull installation of a patch which requires reboot of computer.
.TP
103 - ZYPPER_EXIT_INF_RESTART_NEEDED
Returned after a successfull installation of a patch which requires restart of the package manager itself. This means that one of patches to be installed affects the package manager itself and the command used (e.g. zypper update) needs to be executed once again to install any remaining patches.
.TP
104 - ZYPPER_EXIT_INF_CAP_NOT_FOUND
Returned by the \fBinstall\fR and the \fBremove\fR command in case any of the
arguments does not match any of the available (or installed) package names
or other capabilities.
.TP
105 - ZYPPER_EXIT_ON_SIGNAL
Returned upon exiting after receiving a SIGINT or SIGTERM.


.SH "COMPATIBILITY WITH RUG"
.LP
zypper is designed to be compatible with rug, which is a command\-line interface to the ZENworks Linux Management (ZLM) agent. Compared to rug, zypper does not need the ZLM daemon to run, and is intented to provide more and improved functionality. Following is a list of zypper-rug command aliases, supported rug command line options, and compatibility notes. See also compatibility notes in descriptions of zypper commands. 
.LP
To enable rug-compatible behavior, use the \-r or \-\-rug\-compatible global option with each command.

.SS Service Management Commands
.LP
ZENworks distinguishes services and catalogs. A service is
added by URI and contains one or more catalogs. Libzypp does not have
this distinction (yet) but for compatibility it is able to use the same command
and option names (service-add, \-\-catalog) as rug.
.LP
Currently, a Repository in zypper is a synonym for both Service and Catalog in ZLM.
.TP
.I rug service-add (sa)
zypper addrepo (ar)

.TP
.I rug service-delete (sd)
zypper removerepo (rr)

.TP
.I rug service-list (sl)
zypper repos (lr)

.IP
 zypper doesn't include 'Enabled' and 'Refresh' columns and prints rug's 'Status' column with values "Active" or "Disabled" instead.


.SS Package Management Commands

.TP
.I rug install (in)
zypper install (in)
.RS
.TP
.I \-y, \-\-no\-confirm
Don't require user interaction. This option is implemented using zypper's non-interactive mode.
.TP
.I      \-\-agree\-to\-third\-party\-licenses
This option is an alias to zypper's \-\-auto-agree\-with\-licenses option.
.TP
.I \-R, \-\-force\-resolution <on|off>
This option is not available in rug and zypper uses the 'force-resolution'
solver mode by default when running in rug-compatible mode. However, it is
possible to turn the forcing of resolution off using this option even in
rug-compatible mode.
.RE

.TP
.I rug remove (rm)
zypper remove (rm)
.RS
.TP
.I \-y, \-\-no\-confirm
Don't require user interaction. This option is implemented using zypper's non-interactive mode.
.TP
.I \-R, \-\-force\-resolution <on|off>
This option is not available in rug and zypper uses the 'force-resolution'
solver mode by default when running in rug-compatible mode. However, it is
possible to turn the forcing of resolution off using this option even in
rug-compatible mode.
.RE

.TP
.I rug verify (ve)
zypper verify (ve)
.RS
.TP
.I \-y, \-\-no\-confirm
Don't require user interaction. This option is implemented using zypper's non-interactive mode.
.RE

.TP
.I rug update (up) [catalog] ...
zypper update (up) [package] ...
.IP
Zypper interprets the update command arguments as repository identifiers in rug-compatibilty
mode. The update operation is restricted to the specified repositories.
.RS
.TP
.I \-t, \-\-type
This option defaults to 'package' in rug compatibility mode. Zypper's default is 'patch'.
.TP
.I \-y, \-\-no\-confirm
Don't require user interaction. This option is implemented using zypper's non-interactive mode.
.TP
.I      \-\-agree\-to\-third\-party\-licenses
This option is an alias to zypper's \-\-auto-agree\-with\-licenses option.
.TP
.I \-R, \-\-force\-resolution <on|off>
This option is not available in rug and zypper uses the 'force-resolution'
solver mode by default when running in rug-compatible mode. However, it is
possible to turn the forcing of resolution off using this option even in
rug-compatible mode.
.TP
.I \-d, \-\-downloade\-only
This option has currently no effect.
.TP
.I      \-\-category
This option has currently no effect.

.RE

.TP
.I rug search (se)
zypper search (se)
.TP
\fI    \-\-sort\-by\-catalog\fR
Sort packages by catalog, not by name. This option is an alias to zypper's
\-\-sort\-by\-repo option.

.SS Patch Management Commands

.TP
.I rug patch-info
zypper info -t patch

.SS Pattern Management Commands

.TP
.I rug pattern-info
zypper info -t pattern

.SS Product Management Commands

.TP
.I rug product-info
zypper info -t product

.SS Other Compatibility Notes

.TP
\fI\-c, \-\-catalog\fR <catalog>
This option is an alias to zypper's \-\-repo <alias> and it will restrict
the operation of commands like search, install, etc to the repository specified
by the alias.

.TP
.I \-N, \-\-dry\-run
Zypper uses -D shorthand for this option, but -N is provided for the sake
of compatibility. Zypper (libzypp) implements this option by passing the
\fB\-\-test\fR option to \fBrpm\fR. The option is used in \fBinstall\fR, \fBremove\fR,
\fBupdate\fR, \fBdist-upgrade\fR (not available in rug), and \fBverify\fR commands.

.SH "HOMEPAGE"

http://en.opensuse.org/Zypper

.SH "AUTHORS"
.LP
Martin Vidner <mvidner@suse.cz>
.br
Duncan Mac-Vicar <dmacvicar@suse.de>
.br
Jan Kupec <jkupec@suse.cz>
.br
Stanislav Visnovsky <visnov@suse.cz>
.br
Josef Reidinger <jreidinger@suse.cz>

.SH "SEE ALSO"
.LP
rug(1), YaST2(8), locks(5)
