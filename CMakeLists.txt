CMAKE_MINIMUM_REQUIRED(VERSION 2.6)
PROJECT( ZYPPER C CXX )
SET( PACKAGE "zypper" )

# where to look first for cmake modules, before ${CMAKE_ROOT}/Modules/ is checked
SET( CMAKE_MODULE_PATH
  ${ZYPP_PREFIX}/share/cmake/Modules
  ${ZYPPER_SOURCE_DIR}/cmake/modules
  ${CMAKE_MODULE_PATH}
)
INCLUDE(ZyppCommon)

# VERSION
INCLUDE( ${ZYPPER_SOURCE_DIR}/VERSION.cmake )
SET( VERSION "${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_PATCH}" )
ADD_DEFINITIONS( -D_FILE_OFFSET_BITS=64 )
ADD_DEFINITIONS( -DVERSION="${VERSION}" )

SET( CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -g -O2 -Wall -Woverloaded-virtual -fstack-protector" )
SET( CMAKE_C_FLAGS   "${CMAKE_C_FLAGS}   -g -O2 -Wall -fstack-protector" )

GENERATE_PACKAGING(${PACKAGE} ${VERSION})

FIND_PACKAGE( Zypp REQUIRED )
IF( ZYPP_FOUND )
  INCLUDE_DIRECTORIES(${ZYPP_INCLUDE_DIR})
ELSE( ZYPP_FOUND )
  MESSAGE( FATAL_ERROR "libzypp not found" )
ENDIF( ZYPP_FOUND )

FIND_PACKAGE( Gettext REQUIRED )
IF( GETTEXT_FOUND )
  INCLUDE_DIRECTORIES(${GETTEXT_INCLUDE_DIR})
ELSE( GETTEXT_FOUND )
  MESSAGE( FATAL_ERROR "gettext not found" )
ENDIF( GETTEXT_FOUND )

FIND_PACKAGE( Readline REQUIRED )
IF( READLINE_FOUND )
  INCLUDE_DIRECTORIES(${READLINE_INCLUDE_DIR})
ELSE( READLINE_FOUND )
  MESSAGE( FATAL_ERROR "readline not found" )
ENDIF( READLINE_FOUND )

IF( ZYPPER_CONFIRM_UNSUPPORTED_PACKAGES )
  ADD_DEFINITIONS( -DZYPPER_CONFIRM_UNSUPPORTED_PACKAGES )
ENDIF( ZYPPER_CONFIRM_UNSUPPORTED_PACKAGES )


ADD_SUBDIRECTORY( src )
ADD_SUBDIRECTORY( po )
ADD_SUBDIRECTORY( doc )



# documentation too important to be hidden in doc:
INSTALL(
  FILES COPYING HACKING
  DESTINATION ${INSTALL_PREFIX}/share/doc/packages/${PACKAGE}
)

