# !! still WORK IN PROGRESS !!
# namespace zypper

# common stuff
# progress, messages, prompts, status

# special stuff
# updates list, installation summary, search output

start = stream-element

stream-element =
  element stream {
    ( progress-elements* | download-progress-elements* | message-element* | prompt-element* |
      update-status-element* )+
  }

progress-elements = ( progress-element | progress-done )

progress-element =
  element progress {
    attribute id { xsd:string },
    attribute name { xsd:string },
    attribute value { xsd:integer }? # missing value means an 'is alive' notification
  }

progress-done =
  element progress {
    attribute id { xsd:string },
    attribute name { xsd:string },
    attribute done { xsd:boolean } # 0 on success, 1 on error
  }

download-progress-elements = ( download-progress-element | download-progress-done )

download-progress-element =
  element download {
    attribute url { xsd:string },
    attribute percent { xsd:integer },
    attribute rate { xsd:integer } # download rate in bytes per second
  }

download-progress-done =
  element download {
    attribute url { xsd:string },
    attribute rate { xsd:integer }, # download rate in bytes per second
    attribute done { xsd:boolean } # 0 on success, 1 on error
  }

message-element =
  element message {
    attribute type { "info" | "warning" | "error" }, # considering yet another type "result", maybe a separate <result> element 
    text
  }

prompt-element =
  element prompt {
    attribute id { xsd:integer },
    text
  }

update-status-element =
  element update-status {
    attribute version {xsd:string},
    element update-list {
      element update {
        attribute name { xsd:string },
        attribute edition { xsd:string },
        attribute kind { xsd:string },
        element summary { text },
        element description { text },
        element license { text },
        element source { # repository
          attribute url { xsd:anyURI },
          attribute alias { xsd:string }
        }
      }*
    }
  }
